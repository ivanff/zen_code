{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/add/add.component.ts","webpack:///src/app/add/add.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth.service.ts","webpack:///src/app/gallery-item/gallery-item.component.ts","webpack:///src/app/gallery-item/gallery-item.component.html","webpack:///src/app/gallery/gallery.component.ts","webpack:///src/app/gallery/gallery.component.html","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/not-found/not-found.component.ts","webpack:///src/app/not-found/not-found.component.html","webpack:///src/app/register/register.component.ts","webpack:///src/app/register/register.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","CanActivateAuthRequired","auth","route","state","user","AddComponent","httpClient","titlesFormArray","filesChanges$","uploaded","pipe","files","length","oldFilesSize","filesSize","size","Array","i","push","clear","subscribe","formData","FormData","forEach","item","append","name","value","headers","httpOptions","config","backendGalery","reportProgress","request","event","body","next","httpEvent","index","splice","removeAt","ngf","filesChange","init","uploadFiles","selector","templateUrl","styleUrls","routes","path","component","canActivate","comments","redirectTo","AppRoutingModule","forRoot","imports","AppComponent","titleService","router","title","events","url","setTitle","AppModule","provide","useValue","useFactory","getUser","deps","multi","declarations","providers","bootstrap","AuthService","cookieService","http","user$","withCredentials","get","err","setUser","toPromise","callback","providedIn","GalleryItemResolver","params","GalleryCommentsResolver","GalleryItemComponent","formBuilder","_destroy","snapshot","data","commentForm","group","content","required","maxLength","disable","enable","complete","navigate","post","gallery_item","like_count","status","Object","assign","unshift","reset","comment_count","replaceUrl","like","onSubmit","GalleryComponent","items","getItems","offset","results","HeaderComponent","logout","LoginComponent","loginForm","username","password","message","error","entries","key","join","NotFoundComponent","RegisterComponent","regForm","email","password1","password2","matchValues","matchTo","control","parent","controls","isMatching","environment","baseHref","production","bootstrapModule","console"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {Component, Injectable, OnInit} from '@angular/core';\nimport {AuthService, IUser} from \"../auth.service\";\nimport {FormArray, FormBuilder, FormControl, FormGroup} from \"@angular/forms\";\nimport {\n  HttpClient, HttpRequest, HttpEvent, HttpHeaders, HttpResponse\n} from \"@angular/common/http\"\nimport {Observable, of, Subject, Subscription} from \"rxjs\";\nimport {environment} from \"../../environments/environment\";\nimport {ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot} from \"@angular/router\";\nimport {IGalleryItem} from \"../gallery/gallery.component\";\nimport {map, pairwise, startWith, tap} from \"rxjs/operators\";\n\n\n@Injectable()\nexport class CanActivateAuthRequired implements CanActivate {\n  constructor(private auth: AuthService) {\n  }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\n    return of(!!this.auth.user)\n  }\n}\n\n@Component({\n  selector: 'app-add',\n  templateUrl: './add.component.html',\n  styleUrls: ['./add.component.scss']\n})\nexport class AddComponent implements OnInit {\n  titlesFormArray = new FormArray([]);\n  filesChanges$ = new Subject();\n  uploadPercent;\n  uploaded: Array<IGalleryItem> = [];\n  files: File[];\n  httpEvent: HttpEvent<{}>;\n\n  constructor(private auth: AuthService,\n              public httpClient: HttpClient) {\n\n  }\n\n  ngOnInit(): void {\n    this.filesChanges$.pipe(\n      startWith([]),\n      map((files: Array<any>) => {\n        return files.length\n      }),\n      pairwise(),\n\n      tap(([oldFilesSize, filesSize]) => {\n        const size = filesSize - oldFilesSize;\n        if (size > 0) {\n          for (const i of new Array(size)) {\n            this.titlesFormArray.push(\n              new FormControl('')\n            )\n          }\n        } else if (!filesSize) {\n          this.titlesFormArray.clear()\n        }\n      })\n    ).subscribe()\n  }\n\n  uploadFiles(): Subscription {\n    const formData = new FormData();\n    this.uploaded = [];\n\n    this.files.forEach((item: File) => {\n      formData.append(\"files\", item, item.name)\n    });\n    this.titlesFormArray.value.forEach((item: string) => {\n      formData.append('titles', item)\n    });\n\n    const headers = new HttpHeaders(this.auth.httpOptions.headers);\n\n    const config = new HttpRequest('POST', `${environment.backendGalery}/upload/`, formData, {\n      headers: headers,\n      reportProgress: true\n    });\n    return this.httpClient.request(config).subscribe((event: HttpResponse<Array<IGalleryItem>> | any) => {\n      if (event instanceof HttpResponse) {\n        this.uploaded = event.body;\n        this.files = [];\n        this.filesChanges$.next([]);\n      } else {\n        this.httpEvent = event;\n      }\n    })\n  }\n\n  remove(index): void {\n    this.files.splice(index, 1);\n    this.filesChanges$.next(this.files);\n    this.titlesFormArray.removeAt(index);\n  }\n\n  init(ngf: any) {\n    ngf.filesChange.subscribe((files) => {\n      this.filesChanges$.next(files)\n    })\n  }\n}\n","<div *ngIf=\"uploaded.length\" class=\"container\">\n  <h2>Загруженные изображения:</h2>\n  <div *ngFor=\"let item of uploaded\" class=\"item\">\n    <a [routerLink]=\"['/gallery', item.id]\" replaceUrl>\n      <img [src]=\"item.thumb\">\n    </a>\n\n    <span>Название: {{ item.title}}</span>\n    <span>Лайки: {{ item.like_count}}</span>\n    <span>Комменты: {{ item.comment_count}}</span>\n  </div>\n</div>\n\n<input type=\"file\" accept=\"image/*\" ngf [(files)]=\"files\" (init)=\"init($event)\" multiple=\"10\"/>\n\n<div class=\"container\">\n  <div *ngFor=\"let item of files; let i=index\" class=\"item\">\n    <div *ngIf=\"['image/gif','image/png','image/jpeg'].indexOf(item.type)>=0\">\n      <div class=\"preview\" [ngfBackground]=\"item\"></div>\n    </div>\n    <input [formControl]=\"titlesFormArray.at(i)\" type=\"text\" placeholder=\"Название\" maxlength=\"250\">\n    <a [routerLink]=\"\" (click)=\"remove(i)\">Убрать</a>\n  </div>\n</div>\n\n<button type=\"button\"\n        (click)=\"uploadFiles()\"\n        [disabled]=\"!files\">\n  Загрузить\n</button>\n\n<ngfUploadStatus\n  [(percent)]=\"uploadPercent\"\n  [httpEvent]=\"httpEvent\"\n></ngfUploadStatus>\n\n<div *ngIf=\"uploadPercent\">\n  Upload Progress: {{ uploadPercent }}%\n</div>\n","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {LoginComponent} from \"./login/login.component\";\nimport {GalleryComponent} from \"./gallery/gallery.component\";\nimport {RegisterComponent} from \"./register/register.component\";\nimport {AddComponent, CanActivateAuthRequired} from \"./add/add.component\";\nimport {\n  GalleryCommentsResolver,\n  GalleryItemComponent,\n  GalleryItemResolver\n} from \"./gallery-item/gallery-item.component\";\nimport {NotFoundComponent} from \"./not-found/not-found.component\";\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: GalleryComponent\n  },\n  {\n    path: 'login',\n    component: LoginComponent\n  },\n  {\n    path: 'register',\n    component: RegisterComponent\n  },\n  {\n    path: 'add',\n    component: AddComponent,\n    canActivate: [CanActivateAuthRequired]\n  },\n  {\n    path: 'gallery/:id',\n    component: GalleryItemComponent,\n    resolve: {\n      item: GalleryItemResolver,\n      comments: GalleryCommentsResolver\n    }\n  },\n  {path: '404', component: NotFoundComponent},\n  {path: '**', redirectTo: '/404'}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","import {Component} from '@angular/core';\nimport {Title} from \"@angular/platform-browser\";\nimport {NavigationEnd, Router} from \"@angular/router\";\nimport {filter} from \"rxjs/operators\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Zen code test work: gallery';\n\n  constructor(private titleService: Title,\n              private router: Router) {\n    this.router.events.pipe(\n      filter(event => event instanceof NavigationEnd)\n    ).subscribe((event: NavigationEnd) => {\n      if (event.url == '/404') {\n        this.titleService.setTitle(\"Страница не найдена\")\n      } else {\n        this.titleService.setTitle(this.title)\n      }\n    })\n  }\n}\n","<app-header></app-header>\n<div class=\"app\">\n<router-outlet></router-outlet>\n</div>\n","import {BrowserModule} from '@angular/platform-browser';\nimport {APP_INITIALIZER, NgModule} from '@angular/core';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {HeaderComponent} from './header/header.component';\nimport {GalleryComponent} from './gallery/gallery.component';\nimport {AddComponent, CanActivateAuthRequired} from './add/add.component';\nimport {LoginComponent} from './login/login.component';\nimport {RegisterComponent} from './register/register.component';\nimport {ReactiveFormsModule} from \"@angular/forms\";\nimport {\n  GalleryCommentsResolver,\n  GalleryItemComponent,\n  GalleryItemResolver\n} from './gallery-item/gallery-item.component';\nimport {ngfModule} from \"angular-file\";\nimport {HttpClient, HttpClientModule} from \"@angular/common/http\";\nimport {CookieService} from \"ngx-cookie-service\";\nimport {AuthService} from \"./auth.service\";\nimport {NotFoundComponent} from './not-found/not-found.component';\nimport {APP_BASE_HREF} from \"@angular/common\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    GalleryComponent,\n    AddComponent,\n    LoginComponent,\n    RegisterComponent,\n    GalleryItemComponent,\n    NotFoundComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    ngfModule,\n  ],\n  providers: [\n    CookieService,\n    GalleryItemResolver,\n    GalleryCommentsResolver,\n    CanActivateAuthRequired,\n    {\n      provide: APP_BASE_HREF,\n      useValue: '/'\n    },\n    {\n      provide: APP_INITIALIZER,\n      useFactory: (auth: AuthService) => () => auth.getUser(),\n      deps: [AuthService, HttpClient],\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {\n}\n","import {Injectable} from '@angular/core';\nimport {of, Subject} from \"rxjs\";\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {CookieService} from \"ngx-cookie-service\";\nimport {environment} from \"../environments/environment\";\nimport {catchError, tap} from \"rxjs/operators\";\n\nexport interface IUser {\n  email: string;\n  name: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  user!: IUser | null;\n  user$ = new Subject<IUser | null>();\n  httpOptions = {\n    withCredentials: true,\n    headers: {\n      \"X-CSRFToken\": this.cookieService.get('csrftoken')\n    }\n  };\n\n  constructor(private cookieService: CookieService,\n              private http: HttpClient) {\n    this.user$.subscribe((value => this.user = value))\n  };\n\n  setUser(user: IUser | null): void {\n    this.user$.next(user)\n    if (user) {\n      this.httpOptions.headers[\"X-CSRFToken\"] = this.cookieService.get('csrftoken')\n    }\n  }\n\n  getUser(): Promise<any> {\n    return this.http.get(`${environment.backendGalery}/user/`).pipe(\n      catchError((err: any) => {\n        return of(null)\n      }),\n      tap((user: IUser | null) => {\n        this.setUser(user)\n      })\n    ).toPromise()\n  }\n\n  logout(callback?: any): void {\n    this.http.get(`${environment.backendGalery}/user/logout/`).subscribe(() => {\n      this.setUser(null);\n      callback()\n    })\n  }\n}\n","import {Component, Injectable, OnDestroy, OnInit} from '@angular/core';\nimport {IGalleryItem} from \"../gallery/gallery.component\";\nimport {ActivatedRoute, ActivatedRouteSnapshot, Resolve, Router, RouterStateSnapshot} from \"@angular/router\";\nimport {Observable, of, ReplaySubject} from \"rxjs\";\nimport {AuthService, IUser} from \"../auth.service\";\nimport {FormBuilder, FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {map, takeUntil} from \"rxjs/operators\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {environment} from \"../../environments/environment\";\n\n@Injectable()\nexport class GalleryItemResolver implements Resolve<IGalleryItem> {\n  constructor(private http: HttpClient) {\n\n  }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> | Promise<any> | any {\n    return this.http.get(`${environment.backendGalery}/${route.params['id']}/`);\n  }\n}\n\n@Injectable()\nexport class GalleryCommentsResolver implements Resolve<Array<IComment>> {\n  constructor(private http: HttpClient) {\n\n  }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> | Promise<any> | any {\n    return this.http.get(`${environment.backendGalery}/${route.params['id']}/comment/list/`);\n  }\n}\n\ninterface IComment {\n  id: number;\n  is_owner: boolean;\n  user: string;\n  content: string;\n  created: Date;\n}\n\n@Component({\n  selector: 'app-gallery-item',\n  templateUrl: './gallery-item.component.html',\n  styleUrls: ['./gallery-item.component.scss']\n})\nexport class GalleryItemComponent implements OnInit, OnDestroy {\n  private _destroy = new ReplaySubject();\n  item: IGalleryItem;\n  comments: Array<IComment>;\n  commentForm: FormGroup;\n\n  constructor(private route: ActivatedRoute,\n              private router: Router,\n              private formBuilder: FormBuilder,\n              private auth: AuthService,\n              private http: HttpClient) {\n    this.item = this.route.snapshot.data['item'];\n    this.comments = this.route.snapshot.data['comments'];\n  }\n\n  ngOnInit(): void {\n    this.commentForm = this.formBuilder.group({\n      content: ['', [Validators.required, Validators.maxLength(250)]]\n    });\n    if (!this.auth.user) {\n      this.commentForm.disable();\n    }\n    this.auth.user$.pipe(\n      takeUntil(this._destroy)\n    ).subscribe((value: IUser | null) => {\n      if (value) {\n        this.commentForm.enable()\n      } else {\n        this.commentForm.disable()\n      }\n    })\n  }\n\n  ngOnDestroy(): void {\n    this._destroy.next(null);\n    this._destroy.complete()\n  }\n\n  like(): void {\n    if (!this.auth.user) {\n      this.router.navigate(['/login'])\n    } else {\n      this.http.post(`${environment.backendGalery}/like/`, {\n        gallery_item: this.route.snapshot.params[\"id\"]\n      }, this.auth.httpOptions).subscribe((value) => {\n        ++this.item.like_count;\n      });\n    }\n  }\n\n  onSubmit(value): void {\n    if (!this.auth.user) {\n      this.router.navigate(['/login'])\n    } else {\n      if (this.auth.user) {\n        if (this.commentForm.status == 'VALID') {\n          const data = Object.assign({\n            gallery_item: this.route.snapshot.params[\"id\"]\n          }, value);\n\n          this.http.post(`${environment.backendGalery}/comment/`, data, this.auth.httpOptions).subscribe((value) => {\n            this.comments.unshift(value as IComment);\n            this.commentForm.reset();\n            ++this.item.comment_count;\n          });\n        }\n      }\n    }\n  }\n\n  remove(): void {\n    this.http.delete(`${environment.backendGalery}/${this.item.id}/`, this.auth.httpOptions).subscribe(() => {\n      this.router.navigate(['/'], {\n        replaceUrl: true\n      })\n    })\n  }\n\n  removeComment(index): void {\n    const url = `${environment.backendGalery}/${this.item.id}/comment/${this.comments[index].id}/`;\n    this.http.delete(url, this.auth.httpOptions).subscribe(() => {\n      this.comments.splice(index, 1)\n    })\n  }\n\n}\n","<h1>{{item.title}}</h1>\n\n<div class=\"item\">\n  <img [src]=\"item.image\" class=\"large\">\n  <span>Автор: {{item.user}}</span>\n  <a (click)=\"like()\" [routerLink]=\"\">Нравится: {{ item.like_count}}</a>\n  <a *ngIf=\"item.is_owner\" [routerLink]=\"\" (click)=\"remove()\">Удалить</a>\n</div>\n\n<div>\n  <h2>Оставьте комментарий</h2>\n  <form [formGroup]=\"commentForm\" (submit)=\"onSubmit(commentForm.value)\">\n    <div>\n      <label for=\"content\">\n        Комментарий\n      </label><br>\n      <textarea id=\"content\" formControlName=\"content\" placeholder=\"Ваш отзыв\"></textarea>\n    </div>\n    <button class=\"button\" type=\"submit\">Сохранить</button>\n  </form>\n  <h2>Комментарии ({{comments.length}})</h2>\n  <ul>\n    <li *ngFor=\"let comment of comments; let i = index;\">\n      <span>{{comment.user}}</span>, <small>{{comment.created|date}}</small>&nbsp;\n      <a *ngIf=\"item.is_owner\" [routerLink]=\"\" (click)=\"removeComment(i)\">Удалить</a>\n      <p>\n        {{ comment.content }}\n      </p>\n      <hr>\n    </li>\n  </ul>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {environment} from \"../../environments/environment\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {AuthService} from \"../auth.service\";\n\nexport interface IGalleryItem {\n  id: number;\n  is_owner: boolean;\n  user: string;\n\n  title: string;\n  image: string;\n  thumb: string;\n\n  like_count: number;\n  comment_count: number;\n}\n\ninterface IOffset {\n  count: number;\n  next: string | null;\n  previous: string | null;\n  results: Array<IGalleryItem>;\n}\n\n@Component({\n  selector: 'app-gallery',\n  templateUrl: './gallery.component.html',\n  styleUrls: ['./gallery.component.scss']\n})\nexport class GalleryComponent implements OnInit {\n  offset: IOffset;\n  items: Array<IGalleryItem> = [];\n\n  constructor(private http: HttpClient, private auth: AuthService) {\n    this.getItems()\n  }\n\n  getItems(url?: string): void {\n    this.http.get(url ? url : `${environment.backendGalery}/list/`).subscribe((value: IOffset) => {\n      this.offset = value;\n      this.items.push(...value.results);\n    })\n  }\n\n  remove(index: number): void {\n    this.http.delete(`${environment.backendGalery}/${this.items[index].id}/`, this.auth.httpOptions).subscribe(() => {\n      this.items.splice(index, 1);\n    })\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n  <div *ngFor=\"let item of items; let i=index\"\n       class=\"item\">\n    <b>{{item.title}}</b>\n    <a [routerLink]=\"['/gallery', item.id]\"><img [src]=\"item.thumb\"></a>\n    <span>Автор: {{ item.user}}</span>\n    <span>Лайки: {{ item.like_count}}</span>\n    <span>Комменты: {{ item.comment_count}}</span>\n    <a *ngIf=\"item.is_owner\" [routerLink]=\"\" (click)=\"remove(i)\">Удалить</a>\n  </div>\n  <div *ngIf=\"offset?.next\" class=\"more\">\n    <a [routerLink]=\"\" (click)=\"getItems(offset.next)\">Еще...</a>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {AuthService, IUser} from \"../auth.service\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n  constructor(public auth: AuthService,\n              private router: Router) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  logout(): void {\n    this.auth.logout(() => {\n      this.router.navigate(['/'])\n    })\n  }\n}\n","<div class=\"header\">\n  <a routerLink=\"/\">Домой</a>\n  <a routerLink=\"/add\"><b>Добавить картинку</b></a>\n  {{ auth.user?.name || auth.user?.email || \"Гость\" }},\n  <div *ngIf=\"!auth.user\">\n    <a routerLink=\"/login\">Войти</a> |\n    <a routerLink=\"/register\">Зарегистрироваться</a>\n  </div>\n  <a *ngIf=\"auth.user\" [routerLink]=\"\" (click)=\"logout()\" href>Выйти</a>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, Validators} from \"@angular/forms\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {AuthService, IUser} from \"../auth.service\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {environment} from \"../../environments/environment\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  loginForm;\n  message;\n\n  constructor(private formBuilder: FormBuilder,\n              private route: ActivatedRoute,\n              private router: Router,\n              private auth: AuthService,\n              private http: HttpClient) {\n    this.loginForm = this.formBuilder.group({\n      username: ['', [Validators.required]],\n      password: ['', [Validators.required]],\n    })\n  }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit(value): void {\n    if (this.loginForm.status == 'VALID') {\n      this.http.post(`${environment.backendGalery}/user/login/`, value, this.auth.httpOptions).subscribe((user: IUser) => {\n        this.loginForm.reset();\n        this.auth.setUser(user);\n        this.router.navigate(['/']);\n      }, (err) => {\n        let message = '';\n        if (err.error instanceof Object) {\n          for (let [key, value] of Object.entries(err.error)) {\n            //@ts-ignore\n            message += value.join(',');\n          }\n        }\n        this.message = message\n      });\n    }\n  }\n}\n","<p *ngIf=\"message\" class=\"ng-invalid ng-dirty\">{{message}}</p>\n<form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit(loginForm.value)\">\n  <div>\n    <label for=\"username\">\n      Имя пользователя\n    </label>\n    <input id=\"username\" type=\"email\" formControlName=\"username\" required>\n  </div>\n  <div>\n    <label for=\"password\">\n      Пароль\n    </label>\n    <input id=\"password\" type=\"password\" formControlName=\"password\" required>\n  </div>\n  <button class=\"button\" type=\"submit\">Войти</button>\n</form>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.scss']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1>Страница не найдена</h1>\n","import {Component, OnInit} from '@angular/core';\nimport {AbstractControl, FormBuilder, FormGroup, ValidationErrors, Validators} from \"@angular/forms\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {AuthService, IUser} from \"../auth.service\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {environment} from \"../../environments/environment\";\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n  regForm;\n  message;\n\n  constructor(private formBuilder: FormBuilder,\n              private route: ActivatedRoute,\n              private router: Router,\n              private auth: AuthService,\n              private http: HttpClient) {\n    this.regForm = this.formBuilder.group({\n      username: ['', [Validators.required, Validators.maxLength(150)]],\n      email: ['', [Validators.email]],\n      password1: ['', [Validators.required, Validators.maxLength(20)]],\n      password2: ['', [Validators.required, RegisterComponent.matchValues('password1'),]],\n    })\n  }\n\n  ngOnInit(): void {\n  }\n\n  public static matchValues(matchTo: string): (AbstractControl) => ValidationErrors | null {\n    return (control: AbstractControl): ValidationErrors | null => {\n      return !!control.parent &&\n      !!control.parent.value &&\n      control.value === control.parent.controls[matchTo].value\n        ? null\n        : {isMatching: false};\n    };\n  }\n\n  onSubmit(value): void {\n    if (this.regForm.status == 'VALID') {\n      this.http.post(`${environment.backendGalery}/user/reg/`, value, this.auth.httpOptions).subscribe((value: IUser) => {\n        this.regForm.reset();\n        this.router.navigate(['/']);\n        this.auth.setUser(value)\n      }, (err) => {\n        let message = '';\n        if (err.error instanceof Object) {\n          for (let [key, value] of Object.entries(err.error)) {\n            //@ts-ignore\n            message += value.join(',');\n          }\n        }\n        this.message = message\n      })\n    }\n  }\n}\n","<p *ngIf=\"message\" class=\"ng-invalid ng-dirty\">{{message}}</p>\n<form [formGroup]=\"regForm\" (ngSubmit)=\"onSubmit(regForm.value)\">\n  <div>\n    <label for=\"username\">\n      Логин\n    </label>\n    <input id=\"username\" type=\"text\" formControlName=\"username\" required maxlength=\"150\">\n  </div>\n  <div>\n    <label for=\"email\">\n      Email\n    </label>\n    <input id=\"email\" type=\"email\" formControlName=\"email\" maxlength=\"254\">\n  </div>\n  <div>\n    <label for=\"password1\">\n      Пароль\n    </label>\n    <input id=\"password1\" type=\"password\" formControlName=\"password1\" required maxlength=\"20\">\n  </div>\n  <div>\n    <label for=\"password2\">\n      Повторите пароль\n    </label>\n    <input id=\"password2\" type=\"password\" formControlName=\"password2\" required maxlength=\"20\">\n  </div>\n  <button class=\"button\" type=\"submit\">Зарегистрироваться</button>\n</form>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  baseHref: '/',\n  production: false,\n  backendGalery: '/gallery-api'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}